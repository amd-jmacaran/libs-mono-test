name: Import Subrepo PR

on:
  workflow_dispatch:
    inputs:
      subrepo-prefix:
        description: "Monorepo path prefix (e.g., projects/rocblas)"
        required: true
      subrepo-pr-number:
        description: "Subrepo PR number to import"
        required: true
      subrepo-repo:
        description: "Full name of subrepo repo or fork (e.g., ROCm/rocBLAS or user/rocBLAS-fork)"
        required: true
      subrepo-upstream:
        description: "Canonical subrepo repo (e.g., ROCm/rocBLAS)"
        required: true

jobs:
  import:
    runs-on: ubuntu-latest

    steps:
      - name: Validate maintainer permissions
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTOR: ${{ github.actor }}
        run: |
          PERMISSION=$(curl -s -H "Authorization: token $TOKEN" \
            https://api.github.com/repos/${{ github.repository }}/collaborators/$ACTOR/permission \
            | jq -r .permission)

          echo "User $ACTOR has permission: $PERMISSION"
          if [[ "$PERMISSION" != "admin" && "$PERMISSION" != "maintain" ]]; then
            echo "‚ùå User $ACTOR is not authorized to run this workflow"
            exit 1
          fi

      - name: Generate a token
        id: generate-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          sparse-checkout: .github
          sparse-checkout-cone-mode: true
          token: ${{ steps.generate-token.outputs.token }}
          fetch-depth: 0  # Needed for subtree splitting

      - name: Fetch subrepo PR info using gh
        id: prdata
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          PR_JSON=$(gh pr view ${{ github.event.inputs.subrepo-pr-number }} \
            --repo ${{ github.event.inputs.subrepo-repo }} \
            --json title,body,headRefName,headRepository \
            --jq '{title: .title, body: .body, head_ref: .headRefName, head_repo: .headRepository.cloneUrl}')

          echo "$PR_JSON" > pr.json

          echo "title=$(jq -r .title pr.json)" >> $GITHUB_OUTPUT
          echo "body=$(jq -r .body pr.json)" >> $GITHUB_OUTPUT
          echo "head_ref=$(jq -r .head_ref pr.json)" >> $GITHUB_OUTPUT
          echo "head_repo=$(jq -r .head_repo pr.json)" >> $GITHUB_OUTPUT

      - name: Create new branch for import
        run: |
          BRANCH_NAME=$(echo "${{ steps.prdata.outputs.head_ref }}" | sed 's|/|_|g')
          IMPORT_BRANCH="import/$BRANCH_NAME"
          echo "IMPORT_BRANCH=$IMPORT_BRANCH" >> $GITHUB_OUTPUT
          git checkout -b "$IMPORT_BRANCH"

      - name: Add subrepo remote and fetch PR branch
        run: |
          git remote add subrepo ${{ steps.prdata.outputs.head_repo }}
          git fetch subrepo ${{ steps.prdata.outputs.head_ref }}

      - name: Split subrepo prefix from main branch
        run: |
          git subtree pull --prefix=${{ github.event.inputs.subrepo-prefix }} subrepo ${{ steps.prdata.outputs.head_ref }}

      - name: Push branch
        run: |
          git push origin HEAD

      - name: Create monorepo PR
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          IMPORT_BRANCH="import/${{ github.event.inputs.subrepo-prefix }}/pr-${{ github.event.inputs.subrepo-pr-number }}"
          PR_TITLE="${{ steps.prdata.outputs.title }}"
          PR_BODY="${{ steps.prdata.outputs.body }}"
          SUBREPO_REPO="${{ github.event.inputs.subrepo-repo }}"
          SUBREPO_PR_NUMBER="${{ github.event.inputs.subrepo-pr-number }}"
          SUBREPO_URL="https://github.com/$SUBREPO_REPO/pull/$SUBREPO_PR_NUMBER"

          # Get author username
          AUTHOR=$(gh pr view "$SUBREPO_PR_NUMBER" --repo "$SUBREPO_REPO" --json author --jq .author.login)

          # Build full body with metadata at bottom
          COMBINED_BODY="$PR_BODY

---

üîÅ Imported from [$SUBREPO_REPO#$SUBREPO_PR_NUMBER]($SUBREPO_URL)
üßë‚Äçüíª Originally authored by @$AUTHOR"

          gh pr create \
            --draft \
            --base main \
            --head "$IMPORT_BRANCH" \
            --title "$PR_TITLE" \
            --body "$COMBINED_BODY"